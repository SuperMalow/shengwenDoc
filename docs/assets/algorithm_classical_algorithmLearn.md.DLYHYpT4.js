import{_ as e,c as l,a2 as r,o as i}from"./chunks/framework.CAQ3h1-a.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"algorithm/classical/algorithmLearn.md","filePath":"algorithm/classical/algorithmLearn.md","lastUpdated":1747140868000}'),o={name:"algorithm/classical/algorithmLearn.md"};function t(h,a,n,d,s,c){return i(),l("div",null,a[0]||(a[0]=[r('<h2 id="algorithm-learn-roadmap" tabindex="-1">Algorithm Learn Roadmap <a class="header-anchor" href="#algorithm-learn-roadmap" aria-label="Permalink to &quot;Algorithm Learn Roadmap&quot;">​</a></h2><h3 id="基本数据结构的学习" tabindex="-1">基本数据结构的学习 <a class="header-anchor" href="#基本数据结构的学习" aria-label="Permalink to &quot;基本数据结构的学习&quot;">​</a></h3><h4 id="链表" tabindex="-1">链表 <a class="header-anchor" href="#链表" aria-label="Permalink to &quot;链表&quot;">​</a></h4><ol><li>单链表</li><li>双链表</li></ol><h4 id="哈希表原理及应用" tabindex="-1">哈希表原理及应用 <a class="header-anchor" href="#哈希表原理及应用" aria-label="Permalink to &quot;哈希表原理及应用&quot;">​</a></h4><ol><li>哈希表核心原理</li><li>用链表加强哈希表</li><li>用数组加强哈希表</li></ol><h4 id="二叉树基础及遍历" tabindex="-1">二叉树基础及遍历 <a class="header-anchor" href="#二叉树基础及遍历" aria-label="Permalink to &quot;二叉树基础及遍历&quot;">​</a></h4><ol><li>二叉树基础及常见类型</li><li>二叉树的递归/层序遍历</li><li>多叉树的递归/层序遍历</li><li>DFS和BFS的应用</li><li>二叉搜索树的应用</li></ol><h4 id="二叉堆" tabindex="-1">二叉堆 <a class="header-anchor" href="#二叉堆" aria-label="Permalink to &quot;二叉堆&quot;">​</a></h4><ol><li>二叉堆的核心原理</li></ol><h4 id="线段树" tabindex="-1">线段树 <a class="header-anchor" href="#线段树" aria-label="Permalink to &quot;线段树&quot;">​</a></h4><ol><li>线段树核心原理</li></ol><h4 id="图结构" tabindex="-1">图结构 <a class="header-anchor" href="#图结构" aria-label="Permalink to &quot;图结构&quot;">​</a></h4><ol><li>图结构基础及实现</li><li>图结构的 DFS/BFS</li></ol><h3 id="开始刷题" tabindex="-1">开始刷题 <a class="header-anchor" href="#开始刷题" aria-label="Permalink to &quot;开始刷题&quot;">​</a></h3><h4 id="链表-1" tabindex="-1">链表 <a class="header-anchor" href="#链表-1" aria-label="Permalink to &quot;链表&quot;">​</a></h4><h4 id="数组" tabindex="-1">数组 <a class="header-anchor" href="#数组" aria-label="Permalink to &quot;数组&quot;">​</a></h4><h4 id="队列-栈" tabindex="-1">队列/栈 <a class="header-anchor" href="#队列-栈" aria-label="Permalink to &quot;队列/栈&quot;">​</a></h4><h4 id="二叉树-递归思想" tabindex="-1">二叉树 &amp; 递归思想 <a class="header-anchor" href="#二叉树-递归思想" aria-label="Permalink to &quot;二叉树 &amp; 递归思想&quot;">​</a></h4><h4 id="二叉搜索树" tabindex="-1">二叉搜索树 <a class="header-anchor" href="#二叉搜索树" aria-label="Permalink to &quot;二叉搜索树&quot;">​</a></h4><h4 id="数据结构设计" tabindex="-1">数据结构设计 <a class="header-anchor" href="#数据结构设计" aria-label="Permalink to &quot;数据结构设计&quot;">​</a></h4><h4 id="图算法" tabindex="-1">图算法 <a class="header-anchor" href="#图算法" aria-label="Permalink to &quot;图算法&quot;">​</a></h4><h4 id="dfs和回溯算法" tabindex="-1">DFS和回溯算法 <a class="header-anchor" href="#dfs和回溯算法" aria-label="Permalink to &quot;DFS和回溯算法&quot;">​</a></h4><h4 id="bfs" tabindex="-1">BFS <a class="header-anchor" href="#bfs" aria-label="Permalink to &quot;BFS&quot;">​</a></h4><h4 id="动态规划" tabindex="-1">动态规划 <a class="header-anchor" href="#动态规划" aria-label="Permalink to &quot;动态规划&quot;">​</a></h4><h4 id="贪心算法" tabindex="-1">贪心算法 <a class="header-anchor" href="#贪心算法" aria-label="Permalink to &quot;贪心算法&quot;">​</a></h4><h4 id="分治算法" tabindex="-1">分治算法 <a class="header-anchor" href="#分治算法" aria-label="Permalink to &quot;分治算法&quot;">​</a></h4><h4 id="数学专题" tabindex="-1">数学专题 <a class="header-anchor" href="#数学专题" aria-label="Permalink to &quot;数学专题&quot;">​</a></h4><h4 id="经典面试题" tabindex="-1">经典面试题 <a class="header-anchor" href="#经典面试题" aria-label="Permalink to &quot;经典面试题&quot;">​</a></h4><h4 id="排序算法" tabindex="-1">排序算法 <a class="header-anchor" href="#排序算法" aria-label="Permalink to &quot;排序算法&quot;">​</a></h4>',30)]))}const m=e(o,[["render",t]]);export{b as __pageData,m as default};

import{_ as e,c as a,a2 as t,o as i}from"./chunks/framework.CAQ3h1-a.js";const k=JSON.parse('{"title":"NestJs 笔记","description":"","frontmatter":{},"headers":[],"relativePath":"backend/NestJsNote.md","filePath":"backend/NestJsNote.md","lastUpdated":1738764702000}'),l={name:"backend/NestJsNote.md"};function n(h,s,p,o,r,d){return i(),a("div",null,s[0]||(s[0]=[t(`<h1 id="nestjs-笔记" tabindex="-1">NestJs 笔记 <a class="header-anchor" href="#nestjs-笔记" aria-label="Permalink to &quot;NestJs 笔记&quot;">​</a></h1><h2 id="_0-简单介绍" tabindex="-1">0. 简单介绍 <a class="header-anchor" href="#_0-简单介绍" aria-label="Permalink to &quot;0. 简单介绍&quot;">​</a></h2><p>NestJs 是一个用于构建高效可扩展的一个基于 Node js 服务端 应用程序开发框架，并且完全支持 typeScript ，同时是 spring mvc 风格。</p><p>NestJs 底层是使用了 express 和 fastify ，在他们的基础上做了一层抽象，并将其 API 暴露给开发者。这样可以轻松的使用每个平台的无数第三方库。</p><p>NestJs官网：<a href="https://nestjs.com/" target="_blank" rel="noreferrer">NestJs</a></p><h2 id="_1-ioc-控制反转-和-di-依赖注入" tabindex="-1">1. IOC 控制反转 和 DI 依赖注入 <a class="header-anchor" href="#_1-ioc-控制反转-和-di-依赖注入" aria-label="Permalink to &quot;1. IOC 控制反转 和 DI 依赖注入&quot;">​</a></h2><p>控制反转（Inversion of Control，IoC）是面向对象编程中的一种设计原则，其中一个重要的思想是将对象的创建和依赖关系的管理交给第三方容器来管理。</p><p>依赖注入（Dependency Injection，DI）是指在对象创建时，由容器动态地将所需的依赖对象注入到对象中。</p><p>就是类似于一个管理类，然后其主要功能是添加注入进来的对象和返回需要的对象，即 get 对象和 add 对象。由于对象管理和依赖关系管理的功能都交给了第三方容器，所以称为控制反转。例子：创建A对象、B对象，然后C对象要使用A和B对象，如果下个版本对象A和B有变化，那么C对象也要跟着变代码。而如果采用依赖注入，引入一个Container类来管理对象A和对象B，那么下次修改版本仅修改对象A和B即可，而不需要修改C对象。</p><h2 id="_2-nestjs-前置知识-装饰器" tabindex="-1">2. NestJs 前置知识 - 装饰器 <a class="header-anchor" href="#_2-nestjs-前置知识-装饰器" aria-label="Permalink to &quot;2. NestJs 前置知识 - 装饰器&quot;">​</a></h2><p>装饰器，又称为注解，是一种<strong>特殊的函数</strong>，在NestJs中，主要有这么几类装饰器：</p><ul><li>类装饰器：主要在类的上面进行装饰，会把类进行传入。</li><li>方法装饰器：主要在方法上面进行装饰，会把方法进行传入。</li><li>参数装饰器：主要在方法参数上面进行装饰，会把方法参数进行传入。</li><li>属性装饰器：主要在类的属性上面进行装饰，会把类的属性进行传入。</li></ul><h2 id="_3-nestjs-cli-创建项目" tabindex="-1">3. NestJs CLI 创建项目 <a class="header-anchor" href="#_3-nestjs-cli-创建项目" aria-label="Permalink to &quot;3. NestJs CLI 创建项目&quot;">​</a></h2><p>首先需要安装 NestJs 提供的脚手架工具，NestJs 脚手架是用来快速搭建一个 NestJs 项目的命令行工具。</p><ol><li>安装 nestjs-cli</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @nestjs/cli</span></span></code></pre></div><ol start="2"><li>创建项目</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project-name</span></span></code></pre></div><ol start="3"><li>启动项目</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project-name</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start:dev</span></span></code></pre></div><h2 id="_4-nestjs-cli-常用命令" tabindex="-1">4. NestJs CLI 常用命令 <a class="header-anchor" href="#_4-nestjs-cli-常用命令" aria-label="Permalink to &quot;4. NestJs CLI 常用命令&quot;">​</a></h2><ol><li>查看 NestJs 所有命令：</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nest</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span></span></code></pre></div><ol start="2"><li></li></ol>`,24)]))}const g=e(l,[["render",n]]);export{k as __pageData,g as default};

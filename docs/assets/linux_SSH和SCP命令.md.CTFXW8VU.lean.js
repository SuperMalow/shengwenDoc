import{_ as i,c as a,a2 as e,o as t}from"./chunks/framework.CAQ3h1-a.js";const r=JSON.parse('{"title":"SSH与SCP命令的使用","description":"","frontmatter":{},"headers":[],"relativePath":"linux/SSH和SCP命令.md","filePath":"linux/SSH和SCP命令.md","lastUpdated":1738308455000}'),h={name:"linux/SSH和SCP命令.md"};function l(p,s,n,d,o,k){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="ssh与scp命令的使用" tabindex="-1">SSH与SCP命令的使用 <a class="header-anchor" href="#ssh与scp命令的使用" aria-label="Permalink to &quot;SSH与SCP命令的使用&quot;">​</a></h1><h2 id="ssh" tabindex="-1">SSH <a class="header-anchor" href="#ssh" aria-label="Permalink to &quot;SSH&quot;">​</a></h2><h3 id="ssh登陆" tabindex="-1">SSH登陆 <a class="header-anchor" href="#ssh登陆" aria-label="Permalink to &quot;SSH登陆&quot;">​</a></h3><ol><li>基本用法</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user@hostname</span></span></code></pre></div><p>其中user是远程主机的用户名，hostname是远程主机的IP地址或域名。 那么在第一次进行登陆的时候，会出现一个警告信息，提示是否信任该主机的密钥。输入<code>yes</code>后，这样会将该服务器的信息记录在本地的<code>~/.ssh/known_hosts</code>文件中。然后接着会出现一个密码提示，输入远程主机的密码进行登陆即可。</p><p>默认的ssh登陆端口为22，如果需要指定端口，可以在命令后面加上<code>-p</code>参数：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2222</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user@hostname</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 写法1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user@hostname</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2222</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 写法2</span></span></code></pre></div><ol start="2"><li>配置文件 创建文件<code>~/.ssh/config</code>，内容如下：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    HostName</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 192.168.xxx.xxx</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    User</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Port</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2222</span></span></code></pre></div><p>然后就可以使用简写命令<code>ssh server1</code>来登陆远程主机了。</p><ol start="3"><li>密钥登陆</li></ol><ul><li>创建密钥对：</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span></span></code></pre></div><p>然后一路回车即可。 执行结束后，在<code>~/.ssh</code>目录下会生成两个文件：<code>id_rsa</code>和<code>id_rsa.pub</code>。<code>id_rsa</code>是私钥，<code>id_rsa.pub</code>是公钥。 那么之后想要免密登陆哪个服务器，就把公钥<code>id_rsa.pub</code>文件内的内容，复制到服务器中的<code>~/.ssh/authorized_keys</code>文件中即可。 当然也可以使用以下命令，一键添加密钥到服务器中的<code>authorized_keys</code>文件中：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-copy-id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user@hostname</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 写法1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-copy-id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 配置好文件后可以这样写</span></span></code></pre></div><ol start="4"><li>执行命令 我们可以在不登陆进到远端服务器中进行执行想要执行的命令。例:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user@hostname</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ls -l&quot;</span></span></code></pre></div><p>这条命令会在远程主机上执行<code>ls -l</code>命令，并将结果返回到本地。</p><p>或者也可以这么玩：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user@hostname</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;for((i=1;i&lt;=10;i++))do echo $i;done&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 要使用单引号包裹命令，如果是使用双引号则会将$i当作字符串处理</span></span></code></pre></div><h3 id="scp传文件" tabindex="-1">SCP传文件 <a class="header-anchor" href="#scp传文件" aria-label="Permalink to &quot;SCP传文件&quot;">​</a></h3><ol><li>基本用法</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> local_file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user@hostname:remote_file</span></span></code></pre></div><p>将本地文件<code>local_file</code>传送到远程主机的<code>~/remote_file</code>目录下。</p><p><strong>一次性传送多个文件到远端服务器：</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> local_file1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> local_file2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user@hostname:</span></span></code></pre></div><p><strong>复制文件夹到远端服务器：</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> local_folder</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user@hostname:remote_folder</span></span></code></pre></div><p><code>-r</code>参数表示递归复制文件夹。将本地的<code>local_folder</code>文件夹递归复制到远端服务器中的<code>~/remote_folder</code>文件夹。</p><p><strong>将远端服务器上的文件下载到本地：</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user@hostname:remote_file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> local_file</span></span></code></pre></div><p>将远程主机的<code>~/remote_file</code>文件下载到本地。</p><p><strong>指定服务器的端口：</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -P</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2222</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user@hostname:remote_file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> local_file</span></span></code></pre></div><p><strong>另外需要注意的是：<code>scp</code>中的<code>-r -P</code>等参数尽量加在源文件和目标文件之前，也就是<code>scp</code>命令后面，这样可以避免命令行参数的歧义。</strong></p><p>将祖传配置上传到服务器中:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.vimrc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.tmux.conf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.bashrc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user@hostname:</span></span></code></pre></div>`,38)]))}const g=i(h,[["render",l]]);export{r as __pageData,g as default};

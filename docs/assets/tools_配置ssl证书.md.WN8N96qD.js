import{_ as i,c as a,a2 as e,o as l}from"./chunks/framework.CAQ3h1-a.js";const r=JSON.parse('{"title":"配置免费的 Https 证书","description":"","frontmatter":{},"headers":[],"relativePath":"tools/配置ssl证书.md","filePath":"tools/配置ssl证书.md","lastUpdated":null}'),n={name:"tools/配置ssl证书.md"};function p(t,s,h,k,d,c){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="配置免费的-https-证书" tabindex="-1">配置免费的 Https 证书 <a class="header-anchor" href="#配置免费的-https-证书" aria-label="Permalink to &quot;配置免费的 Https 证书&quot;">​</a></h1><p>如题，由于作者是个穷比，所以没有钱购买阿里云的 SSL 证书，只能另寻他路。于是找到了 acme.sh 这个工具，可以很方便的实现 https 证书的颁发与自动续期。而且是免费的！</p><h2 id="安装-acme-sh" tabindex="-1">安装 acme.sh <a class="header-anchor" href="#安装-acme-sh" aria-label="Permalink to &quot;安装 acme.sh&quot;">​</a></h2><p>首先 <code>acme.shsh</code> 的官网地址：<a href="https://github.com/acmesh-official/" target="_blank" rel="noreferrer">acmesh GitHub</a></p><ol><li>安装 acme.sh 脚本</li></ol><p>为了不容易出错，我希望读者你在 <code>~</code> 目录下进行安装：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://get.acme.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> email=my@example.com</span></span></code></pre></div><p>或者</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -O</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  https://get.acme.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> email=my@example.com</span></span></code></pre></div><p>以上的 <code>email=my@example.com</code> 参数随便填写一个邮箱即可。</p><blockquote><p>注意如果提示出错，大概率是需要安装 <code>cron</code> 命令，运行 <code>apt update &amp;&amp; apt install -y cron</code> 后，重新执行上面安装的命令。</p><p>这个 cron 主要是后续运行自动续费证书脚本的依赖。</p></blockquote><p>安装完成后，会自动在 <code>~/.acme.sh</code> 目录下生成 <code>acme.sh</code> 脚本。为了方便使用该脚本，可以为该命令起一个别名：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">alias</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> acme.sh=~/.acme.sh/acme.sh</span></span></code></pre></div><p>这样，我们就可以在任意目录下使用 <code>acme.sh</code> 命令了。</p><ol start="2"><li>修改 CA 服务器默认配置</li></ol><p><code>acme.sh</code> 脚本默认 <code>CA</code> 服务器是 <code>ZeroSSL</code>，有时可能会导致获取证书的时候一直出现：<code>Pending，The CA is processing your order，please just wait.</code> 也就是网络不好。</p><p>只需要把 <code>CA</code> 服务器改成 <code>Let&#39;s Encrypt</code> 即可：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">acme.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --set-default-ca</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> letsencrypt</span></span></code></pre></div><ol start="3"><li>生成证书</li></ol><p><code>acme.sh</code> 实现了 <code>acme</code> 协议支持的所有验证协议。</p><p>一般有两种方式验证: <code>HTTP</code> 和 <code>DNS</code> 验证。本文只演示 <code>HTTP</code> 验证，并且是在 <code>Nginx</code> 模式下。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">acme.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --issue</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> example.com</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> www.example.com</span></span></code></pre></div><p>只需要将 <code>example.com</code> 替换成你的域名即可。</p><ol start="4"><li>复制证书</li></ol><p>证书生成好以后，我们需要把证书复制给对应的 <code>Nginx</code> 或其他服务器去使用。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/www/ssl</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">acme.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install-cert</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> example.com</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--key-file       </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/var/www/ssl/example.com.key</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--fullchain-file </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/var/www/ssl/example.com.pem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--reloadcmd     </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;service apache2 force-reload&quot;</span></span></code></pre></div><p>以上的命令，就是我先在 <code>/var/www/</code> 目录下创建了一个 <code>ssl</code> 目录，然后把证书复制到该目录下。方便后续 <code>nginx</code> 的配置。</p><ol start="5"><li>配置 <code>nginx</code> 配置</li></ol><p>由于每个人的 <code>nginx</code> 配置文件都不一样，所以这里只贴出关键部分：</p><blockquote><p>不要忘记将 example.com 替换成你的域名</p></blockquote><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8443</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ssl;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">example.com www.example.com; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 更改成你的域名</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ssl_certificate </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    /var/www/ssl/example.com.pem; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 更改成你的域名</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ssl_certificate_key </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/var/www/ssl/example.com.key; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 更改成你的域名</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ssl_protocols </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TLSv1.1 TLSv1.2 TLSv1.3;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ssl_ciphers </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ssl_prefer_server_ciphers </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">off</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ssl_session_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ssl_session_cache </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">shared:MozSSL:10m;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        root </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/var/www/html;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        index </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">index.html index.htm;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol start="6"><li>重启 <code>nginx</code></li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reload</span></span></code></pre></div><p>以上就是使用 <code>acme.sh</code> 脚本生成 <code>https</code> 证书的全部过程，本文完。</p>`,34)]))}const g=i(n,[["render",p]]);export{r as __pageData,g as default};
